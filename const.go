package gotox

//#include <tox/tox.h>
import "C"
import "errors"

const (
	MAX_NAME_LENGTH           = C.TOX_MAX_NAME_LENGTH
	MAX_MESSAGE_LENGTH        = C.TOX_MAX_MESSAGE_LENGTH
	MAX_STATUS_MESSAGE_LENGTH = C.TOX_MAX_STATUS_MESSAGE_LENGTH
	PUBLIC_KEY_SIZE           = C.TOX_PUBLIC_KEY_SIZE
	ADDRESS_SIZE              = C.TOX_ADDRESS_SIZE
)

type ConnectionStatus C.enum_TOX_CONNECTION

const (
	CONNECTION_NONE ConnectionStatus = C.TOX_CONNECTION_NONE
	CONNECTION_TCP  ConnectionStatus = C.TOX_CONNECTION_TCP
	CONNECTION_UDP  ConnectionStatus = C.TOX_CONNECTION_UDP
)

type MessageType C.enum_TOX_MESSAGE_TYPE

const (
	MESSAGE_TYPE_NORMAL MessageType = C.TOX_MESSAGE_TYPE_NORMAL
	MESSAGE_TYPE_ACTION MessageType = C.TOX_MESSAGE_TYPE_ACTION
)

type UserStatus C.enum_TOX_USER_STATUS

const (
	USERSTATUS_NONE UserStatus = C.TOX_USER_STATUS_NONE
	USERSTATUS_AWAY UserStatus = C.TOX_USER_STATUS_AWAY
	USERSTATUS_BUSY UserStatus = C.TOX_USER_STATUS_BUSY
)

type FileControl C.enum_TOX_FILE_CONTROL

const (
	FILE_CONTROL_RESUME FileControl = C.TOX_FILE_CONTROL_RESUME
	FILE_CONTROL_PAUSE  FileControl = C.TOX_FILE_CONTROL_PAUSE
	FILE_CONTROL_CANCEL FileControl = C.TOX_FILE_CONTROL_CANCEL
)

type ProxyType C.enum_TOX_PROXY_TYPE

const (
	PROXY_TYPE_NONE   ProxyType = C.TOX_PROXY_TYPE_NONE
	PROXY_TYPE_HTTP   ProxyType = C.TOX_PROXY_TYPE_HTTP
	PROXY_TYPE_SOCKS5 ProxyType = C.TOX_PROXY_TYPE_SOCKS5
)

/* === Errors === */
// General errors
var (
	ErrInit     = errors.New("Error initializing Tox")
	ErrBadTox   = errors.New("Tox not initialized")
	ErrFuncFail = errors.New("Function failed")
	ErrArgs     = errors.New("Nil arguments or wrong size")
	ErrUnknown  = errors.New("An unknown error occoured")
)

type ToxNewError C.enum_TOX_ERR_NEW

const (
	ERR_NEW_OK              ToxNewError = C.TOX_ERR_NEW_OK
	ERR_NEW_NULL            ToxNewError = C.TOX_ERR_NEW_NULL
	ERR_NEW_MALLOC          ToxNewError = C.TOX_ERR_NEW_MALLOC
	ERR_NEW_PORT_ALLOC      ToxNewError = C.TOX_ERR_NEW_PORT_ALLOC
	ERR_NEW_PROXY_BAD_TYPE  ToxNewError = C.TOX_ERR_NEW_PROXY_BAD_TYPE
	ERR_NEW_PROXY_BAD_HOST  ToxNewError = C.TOX_ERR_NEW_PROXY_BAD_HOST
	ERR_NEW_PROXY_BAD_PORT  ToxNewError = C.TOX_ERR_NEW_PROXY_BAD_PORT
	ERR_NEW_PROXY_NOT_FOUND ToxNewError = C.TOX_ERR_NEW_PROXY_NOT_FOUND
	ERR_NEW_LOAD_ENCRYPTED  ToxNewError = C.TOX_ERR_NEW_LOAD_ENCRYPTED
	ERR_NEW_LOAD_BAD_FORMAT ToxNewError = C.TOX_ERR_NEW_LOAD_BAD_FORMAT
)

type BootstrapError C.enum_TOX_ERR_BOOTSTRAP

const (
	TOX_ERR_BOOTSTRAP_OK       BootstrapError = C.TOX_ERR_BOOTSTRAP_OK
	TOX_ERR_BOOTSTRAP_NULL     BootstrapError = C.TOX_ERR_BOOTSTRAP_NULL
	TOX_ERR_BOOTSTRAP_BAD_HOST BootstrapError = C.TOX_ERR_BOOTSTRAP_BAD_HOST
	TOX_ERR_BOOTSTRAP_BAD_PORT BootstrapError = C.TOX_ERR_BOOTSTRAP_BAD_PORT
)

// FriendAddError
var (
	FaerrNull         = errors.New("One of the arguments was NULL")
	FaerrTooLong      = errors.New("Message too long")
	FaerrNoMessage    = errors.New("Empty message")
	FaerrOwnKey       = errors.New("Own key")
	FaerrAlreadySent  = errors.New("Already sent")
	FaerrUnkown       = errors.New("Unknown error")
	FaerrBadChecksum  = errors.New("Bad checksum in address")
	FaerrSetNewNospam = errors.New("Different nospam")
	FaerrNoMem        = errors.New("Failed increasing friend list")
)

type FriendAddError C.enum_TOX_ERR_FRIEND_ADD

const (
	ERR_FRIEND_ADD_OK             FriendAddError = C.TOX_ERR_FRIEND_ADD_OK
	ERR_FRIEND_ADD_NULL           FriendAddError = C.TOX_ERR_FRIEND_ADD_NULL
	ERR_FRIEND_ADD_TOO_LONG       FriendAddError = C.TOX_ERR_FRIEND_ADD_TOO_LONG
	ERR_FRIEND_ADD_NO_MESSAGE     FriendAddError = C.TOX_ERR_FRIEND_ADD_NO_MESSAGE
	ERR_FRIEND_ADD_OWN_KEY        FriendAddError = C.TOX_ERR_FRIEND_ADD_OWN_KEY
	ERR_FRIEND_ADD_ALREADY_SENT   FriendAddError = C.TOX_ERR_FRIEND_ADD_ALREADY_SENT
	ERR_FRIEND_ADD_BAD_CHECKSUM   FriendAddError = C.TOX_ERR_FRIEND_ADD_BAD_CHECKSUM
	ERR_FRIEND_ADD_SET_NEW_NOSPAM FriendAddError = C.TOX_ERR_FRIEND_ADD_SET_NEW_NOSPAM
	ERR_FRIEND_ADD_MALLOC         FriendAddError = C.TOX_ERR_FRIEND_ADD_MALLOC
)

type FriendByPublicKeyError C.enum_TOX_ERR_FRIEND_BY_PUBLIC_KEY

const (
	TOX_ERR_FRIEND_BY_PUBLIC_KEY_OK        FriendByPublicKeyError = C.TOX_ERR_FRIEND_BY_PUBLIC_KEY_OK
	TOX_ERR_FRIEND_BY_PUBLIC_KEY_NULL      FriendByPublicKeyError = C.TOX_ERR_FRIEND_BY_PUBLIC_KEY_NULL
	TOX_ERR_FRIEND_BY_PUBLIC_KEY_NOT_FOUND FriendByPublicKeyError = C.TOX_ERR_FRIEND_BY_PUBLIC_KEY_NOT_FOUND
)

type FriendGetPublicKeyError C.enum_TOX_ERR_FRIEND_GET_PUBLIC_KEY

const (
	ERR_FRIEND_GET_PUBLIC_KEY_OK               FriendGetPublicKeyError = C.TOX_ERR_FRIEND_GET_PUBLIC_KEY_OK
	ERR_FRIEND_GET_PUBLIC_KEY_FRIEND_NOT_FOUND FriendGetPublicKeyError = C.TOX_ERR_FRIEND_GET_PUBLIC_KEY_FRIEND_NOT_FOUND
)

type FriendDeleteError C.enum_TOX_ERR_FRIEND_DELETE

const (
	ERR_FRIEND_DELETE_OK               FriendDeleteError = C.TOX_ERR_FRIEND_DELETE_OK
	ERR_FRIEND_DELETE_FRIEND_NOT_FOUND FriendDeleteError = C.TOX_ERR_FRIEND_DELETE_FRIEND_NOT_FOUND
)

type FriendQueryError C.enum_TOX_ERR_FRIEND_QUERY

const (
	ERR_FRIEND_QUERY_OK               FriendQueryError = C.TOX_ERR_FRIEND_QUERY_OK
	ERR_FRIEND_QUERY_NULL             FriendQueryError = C.TOX_ERR_FRIEND_QUERY_NULL
	ERR_FRIEND_QUERY_FRIEND_NOT_FOUND FriendQueryError = C.TOX_ERR_FRIEND_QUERY_FRIEND_NOT_FOUND
)

type SetInfoError C.enum_TOX_ERR_SET_INFO

const (
	ERR_SET_INFO_OK       SetInfoError = C.TOX_ERR_SET_INFO_OK
	ERR_SET_INFO_NULL     SetInfoError = C.TOX_ERR_SET_INFO_NULL
	ERR_SET_INFO_TOO_LONG SetInfoError = C.TOX_ERR_SET_INFO_TOO_LONG
)

type SetTypingError C.enum_TOX_ERR_SET_TYPING

const (
	ERR_SET_TYPING_OK               SetTypingError = C.TOX_ERR_SET_TYPING_OK
	ERR_SET_TYPING_FRIEND_NOT_FOUND SetTypingError = C.TOX_ERR_SET_TYPING_FRIEND_NOT_FOUND
)

type FriendSendMessageError C.enum_TOX_ERR_FRIEND_SEND_MESSAGE

const (
	ERR_FRIEND_SEND_MESSAGE_OK                   FriendSendMessageError = C.TOX_ERR_FRIEND_SEND_MESSAGE_OK
	ERR_FRIEND_SEND_MESSAGE_NULL                 FriendSendMessageError = C.TOX_ERR_FRIEND_SEND_MESSAGE_NULL
	ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_FOUND     FriendSendMessageError = C.TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_FOUND
	ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_CONNECTED FriendSendMessageError = C.TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_CONNECTED
	ERR_FRIEND_SEND_MESSAGE_SENDQ                FriendSendMessageError = C.TOX_ERR_FRIEND_SEND_MESSAGE_SENDQ
	ERR_FRIEND_SEND_MESSAGE_TOO_LONG             FriendSendMessageError = C.TOX_ERR_FRIEND_SEND_MESSAGE_TOO_LONG
	ERR_FRIEND_SEND_MESSAGE_EMPTY                FriendSendMessageError = C.TOX_ERR_FRIEND_SEND_MESSAGE_EMPTY
)

type FriendGetLastOnlineError C.enum_TOX_ERR_FRIEND_GET_LAST_ONLINE

const (
	ERR_FRIEND_GET_LAST_ONLINE_OK               FriendGetLastOnlineError = C.TOX_ERR_FRIEND_GET_LAST_ONLINE_OK
	ERR_FRIEND_GET_LAST_ONLINE_FRIEND_NOT_FOUND FriendGetLastOnlineError = C.TOX_ERR_FRIEND_GET_LAST_ONLINE_FRIEND_NOT_FOUND
)

type FileControlError C.enum_TOX_ERR_FILE_CONTROL

const (
	ERR_FILE_CONTROL_OK                   FileControlError = C.TOX_ERR_FILE_CONTROL_OK
	ERR_FILE_CONTROL_FRIEND_NOT_FOUND     FileControlError = C.TOX_ERR_FILE_CONTROL_FRIEND_NOT_FOUND
	ERR_FILE_CONTROL_FRIEND_NOT_CONNECTED FileControlError = C.TOX_ERR_FILE_CONTROL_FRIEND_NOT_CONNECTED
	ERR_FILE_CONTROL_NOT_FOUND            FileControlError = C.TOX_ERR_FILE_CONTROL_NOT_FOUND
	ERR_FILE_CONTROL_NOT_PAUSED           FileControlError = C.TOX_ERR_FILE_CONTROL_NOT_PAUSED
	ERR_FILE_CONTROL_DENIED               FileControlError = C.TOX_ERR_FILE_CONTROL_DENIED
	ERR_FILE_CONTROL_ALREADY_PAUSED       FileControlError = C.TOX_ERR_FILE_CONTROL_ALREADY_PAUSED
	ERR_FILE_CONTROL_SENDQ                FileControlError = C.TOX_ERR_FILE_CONTROL_SENDQ
)
